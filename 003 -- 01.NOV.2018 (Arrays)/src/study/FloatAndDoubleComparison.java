package study;

public class FloatAndDoubleComparison {
	public static void main(String[] args) {

	/* 실수는 오차가 발생할 수 있다 --> 원래 값이 저장되지 않을 수가 있다!!!
	 * 	>> 정수는 오차가 발생하지 않는다
	 * 	>> float & double comparison !!!
	 * 		>--> 모두 float로 맞추면 오차 문제해결 !!!
	 * 	
	 * 	>> 1/3 == 0.333... 처럼 대부분의 실수는 정확히 표현 할 수가 없다
	 * 		>> float & double의 표현범위 내에서 비슷하게 소수점 이하를 만든다
	 * 		>> float & double에서 나온 실수가 서로 비슷할 수는 있어도 완전히 같을리가 없다
	 */
	
	/* 실수의 오차가 발생하는 이유 3가지
	 * (1) 원래 오차가 있는 실수 --> ex) 1/3
	 * (2) 10진수 -> 2진 실수 변환 시 발생할 수 있다
	 * (3) 저장공간의 한계에 의해 실수를 모두 저장하지 못하고 끝이 짤리는 경우
	 */

	// %22.20f --> 전체 22자리 중에서 소수점 아래 20자리 출력
	System.out.printf("\t0.1f == %22.20f\n", 0.1f);
	System.out.printf("\t0.1d == %22.20f\n", 0.1); // %f is for both float and double
	System.out.printf("(float) 0.1d == %22.20f\n", (float) 0.1);
	
	/* 3.5 == 2 + 1 + 0.5 == 1*2**1 + 1*2**0 + 1*2**(-1)
	 * 
	 * 3.2f == 2 + 1 + 1/8 + 1/16 + 1/128 + 1/256 + 1/2048 + 1/4096 + 1/32768 + 1/65536 + 1/524288 + 1/1048576 + 1/4194304 + a small error
	 * 3.2d == 2 + 1 + 1/8 + 1/16 + 1/128 + 1/256 + 1/2048 + 1/4096 + 1/32768 + 1/65536 + 1/524288 + 1/1048576 + 1/8388608
	 * 			 + 1/16777216 + 1/134217728 + 1/268435456 + 1/2147483648 + 1/4294967296 + 1/34359738368 + 1/68719476736
	 * 			 + 1/549755813888 + 1/1099511627776 + 1/8796093022208 + 1/17592186044416 + 1/140737488355328 + 1/281474976710656
	 * 			 + 1/1125899906842624 + a smaller error
	 * 
	 */
	System.out.printf("\n\t3.5f == %22.20f\n", 3.5f);
	System.out.printf("\t3.5d == %22.20f\n", 3.5d);
	System.out.printf("\n\t3.2f == %22.20f\n", 3.2f);
	System.out.printf("\t3.2d == %22.20f\n", 3.2); // %f is for both float and double
	System.out.printf("(float) 3.2d == %22.20f\n", (float) 3.2);

	}

}
